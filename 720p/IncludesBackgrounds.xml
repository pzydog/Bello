<includes>

	<include name="BackgroundWeather">
		<control type="multiimage">
			<include>FullscreenDimensions</include>
			<include>FanartFade</include>
			<imagepath background="true">$INFO[Skin.String(WeatherFanartDir)]$INFO[Window(Weather).Property(Current.FanartCode)]</imagepath>
			<timeperimage>30000</timeperimage>
		  <fadetime>500</fadetime>
		  <randomize>true</randomize>
		  <loop>yes</loop>
			<visible>[Skin.HasSetting(ShowWeatherFanart) + !IsEmpty(Skin.String(WeatherFanartDir))] + Window.IsVisible(weather) | Container(20).HasFocus(8)</visible>
		</control>
	</include>
	
	<include name="BackgroundContent">
	 <control type="group">
			<visible>![Player.HasVideo + !Skin.HasSetting(HideBGVideo)] + ![Player.HasAudio + !SubString(Window(Videos).Property(TvTunesIsAlive),True) + ![Skin.HasSetting(Vis-Visualization) + Skin.HasSetting(Vis-Fanart) + Skin.HasSetting(Vis-MusicFanart) + Skin.HasSetting(Vis-ArtistSlideshow)]]</visible>
		<control type="image">
			<description>Normal Default Background Image</description>
			<include>FullscreenDimensions</include>
			<texture background="true">special://skin/backgrounds/SKINDEFAULT.jpg</texture>
			<visible>IsEmpty(Skin.String(CustomImageBackgroundPath)) | IsEmpty(Skin.String(CustomFolderBackgroundPath))</visible>
			<include>BackgroundFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
		</control>
		<control type="image">
			<description>Custom Background Image</description>
			<include>FullscreenDimensions</include>
			<texture background="true">$INFO[Skin.String(CustomImageBackgroundPath)]</texture>
			<include>BackgroundFade</include>
			<fadetime>500</fadetime>
			<visible>Skin.HasSetting(CustomBackground) + !IsEmpty(Skin.String(CustomImageBackgroundPath))</visible>
      <visible>![![Skin.HasSetting(ShowWeatherFanart) + !IsEmpty(Skin.String(WeatherFanartDir))] + Window.IsVisible(weather) + Container(20).HasFocus(8)]</visible>
		</control>
		<control type="multiimage">
			<description>Custom Background Folder</description>
			<include>FullscreenDimensions</include>
			<imagepath background="true">$INFO[Skin.String(CustomFolderBackgroundPath)]</imagepath>
			<include>BackgroundFade</include>
			<fadetime>500</fadetime>
			<timeperimage>30000</timeperimage>
			<randomize>true</randomize>
      <loop>yes</loop>
			<visible>Skin.HasSetting(CustomBackground) + !IsEmpty(Skin.String(CustomFolderBackgroundPath))</visible>
      <visible>![![Skin.HasSetting(ShowWeatherFanart) + !IsEmpty(Skin.String(WeatherFanartDir))] + Window.IsVisible(weather) + Container(20).HasFocus(8)]</visible>
		</control>		
	  <include condition="[Skin.HasSetting(ShowWeatherFanart) + !IsEmpty(Skin.String(WeatherFanartDir))]">BackgroundWeather</include>
	 </control>

		<control type="videowindow">
				<description>Video</description>
				<include>FullscreenDimensions</include>
			  <visible>Player.HasVideo + !Skin.HasSetting(HideBGVideo)</visible>
		</control>

		<control type="visualisation">
				<description>visualisation</description>
	      <include>FullscreenDimensions</include>
			  <visible>Player.HasAudio + !Skin.HasSetting(Vis-Visualization)</visible>
				<visible>!SubString(Window(Videos).Property(TvTunesIsAlive),True)</visible>
		</control>
		<control type="image">
		    <include>FullscreenDimensions</include>
		    <fadetime>1000</fadetime>
		    <texture background="true">$INFO[MusicPlayer.Property(Fanart_Image)]</texture>
		    <animation effect="fade" start="100" end="50" time="0" condition="true">Conditional</animation>
			  <animation effect="fade" start="0" end="100" time="1000">Visible</animation>
			  <animation effect="fade" start="100" end="0" time="1000">Hidden</animation>
			  <include condition="Skin.HasSetting(Vis-Animation)">VizBackAnimation</include>
		    <visible>Player.HasAudio + Skin.HasSetting(Vis-Fanart)</visible>
		</control>
		<control type="multiimage">
		    <include>FullscreenDimensions</include>
				<timeperimage>10000</timeperimage>
				<fadetime>1000</fadetime>
				<randomize>true</randomize>
        <loop>yes</loop>
		    <imagepath background="true">$INFO[Skin.String(Vis-CustomSlideshowDir)]</imagepath>
		    <animation effect="fade" start="100" end="50" time="0" condition="true">Conditional</animation>
			  <animation effect="fade" start="0" end="100" time="1000">Visible</animation>
			  <animation effect="fade" start="100" end="0" time="1000">Hidden</animation>
			  <include condition="Skin.HasSetting(Vis-Animation)">VizBackAnimation</include>
		    <visible>Player.HasAudio + Skin.HasSetting(Vis-CustomSlideshow)</visible>
		</control>
		<control type="multiimage">
			<posx>0</posx>
			<posy>0</posy>
			<width>1280</width>
			<height>720</height>
			<imagepath fallback="special://profile/Thumbnails/Music/Fanart" background="true">$INFO[Window(Visualisation).Property(ArtistSlideshow)]</imagepath>
			<aspectratio>keep</aspectratio>
			<timeperimage>10000</timeperimage>
			<fadetime>1000</fadetime>
			<randomize>true</randomize>
      <loop>yes</loop>
			<animation effect="fade" start="100" end="50" time="0" condition="true">Conditional</animation>
			<animation effect="fade" start="0" end="100" time="1000">Visible</animation>
			<animation effect="fade" start="100" end="0" time="1000">Hidden</animation>
			<include condition="Skin.HasSetting(Vis-Animation)">VizBackAnimation</include>
			<visible>Player.HasAudio + Skin.HasSetting(Vis-ArtistSlideshow) + IsEmpty(Window(Visualisation).Property(ArtistSlideshowRefresh))</visible>
		</control>
	</include>

	<include name="GlobalFanart">
		<control type="image">
			<description>Global Fanart</description>
			<include>FullscreenDimensions</include>
      <texture background="true">$INFO[ListItem.Art(fanart)]</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
		  <visible>!Skin.HasSetting(HideBGFanart)</visible>
		  <visible>![Control.IsVisible(55) + !Window.IsActive(movieinformation)]</visible>
		</control>
		<control type="image">
			<description>Pictures Fanart</description>
		  <aspectratio align="center" aligny="top">scale</aspectratio>
			<include>FullscreenDimensions</include>
      <texture background="true">$INFO[ListItem.FileNameAndPath]</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>Window.IsVisible(Pictures) + Container.HasFiles</visible>
		  <visible>!Skin.HasSetting(HideBGFanart)</visible>
		</control>
		<control type="image">
			<description>TVGuide Fanart</description>
			<include>FullscreenDimensions</include>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<texture background="true">$VAR[TVGuideFanart]</texture>
		  <visible>!Skin.HasSetting(HideTVGuideFanart)</visible>
		</control>
	</include>
	
	<include name="HomeFanartSlideShow">
		<control type="multiimage" id="100">
		  <include>FullscreenDimensions</include>
			<include>FanartFade</include>
		  <timeperimage>30000</timeperimage>
		  <fadetime>450</fadetime>
		  <randomize>true</randomize>
		  <loop>yes</loop>
		  <imagepath background="true">special://profile/Thumbnails/Video/Fanart/</imagepath>
		  <visible>Skin.HasSetting(HomeFanartSlideShow) + !Player.HasVideo + ![Player.HasAudio + ![Skin.HasSetting(Vis-Visualization) + Skin.HasSetting(Vis-Fanart) + Skin.HasSetting(Vis-MusicFanart) + Skin.HasSetting(Vis-ArtistSlideshow)]]</visible>
		  <visible>![Container(20).HasFocus(8) + !IsEmpty(Skin.String(WeatherFanartDir))]</visible>
		  <visible>!Skin.HasSetting(HideBGFanart)</visible>
	  </control>
	</include>

	<include name="RecentAndSkinWidgetsFanart">
		<!-- Recent list fanart -->
	  <control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">$INFO[Container(81).ListItem.Property(FanartImage)]</texture>
			<include>BackgroundFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>Control.HasFocus(81)</visible>
		  <visible>!Skin.HasSetting(HideBGFanart)</visible>
		</control>
		<!-- Recommended fanart -->
	  <control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">$INFO[Container(82).ListItem.Property(FanartImage)]</texture>
			<include>BackgroundFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>Control.HasFocus(82)</visible>
		  <visible>!Skin.HasSetting(HideBGFanart)</visible>
		</control>
		<!-- Random fanart -->
	  <control type="image">
			<include>FullscreenDimensions</include>
			<texture background="true">$INFO[Container(83).ListItem.Property(FanartImage)]</texture>
			<include>BackgroundFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>Control.HasFocus(83)</visible>
		  <visible>!Skin.HasSetting(HideBGFanart)</visible>
		</control>
	</include>

	<include name="BackgroundVignette">
		<control type="image">
		  <description>Vignette</description>
			<include>FullscreenDimensions</include>
		  <texture background="true">windows/bg/bg_vignette.png</texture>
			<include>BackgroundFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
<!--	<colordiffuse>FFCDCDCD</colordiffuse>
      <colordiffuse>D5FFFFFF</colordiffuse> -->
		</control>
		<control type="image">
			<include>FullscreenDimensions</include>
		  <texture background="true">windows/bg/bg_diffuse.png</texture>
			<include>FanartFade</include>
			<fadetime>FanartCrossfadeTime</fadetime>
			<visible>[Control.IsVisible(50) | Control.IsVisible(51) | Control.IsVisible(52) | Control.IsVisible(53) | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(57) | Window.IsVisible(script-NextAired-TVGuide.xml)]</visible>
<!-- <visible>![Skin.String(PVRView,1) + Control.IsVisible(11)] + ![Skin.String(PVRView,2) + Control.IsVisible(12)] + ![Skin.String(PVRView,3) + [Control.IsVisible(10) | Control.IsVisible(15) | Control.IsVisible(16)]] + ![Skin.String(PVRView,4) + Control.IsVisible(13)] + ![Skin.String(PVRView,5) + Control.IsVisible(14)] + ![Skin.String(PVRView,6) + Control.IsVisible(17)]</visible>
		  <visible>!Skin.HasSetting(HideBGFanart)</visible> -->
      <colordiffuse>D5FFFFFF</colordiffuse>
	  </control>
	</include>

</includes>